/*******************************************************************************
 * Copyright 2014 KU Leuven Research and Developement - iMinds - Distrinet 
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 *    
 *    Administrative Contact: dnet-project-office@cs.kuleuven.be
 *    Technical Contact: maarten.decat@cs.kuleuven.be
 *    Author: maarten.decat@cs.kuleuven.be
 ******************************************************************************/
package puma.central.pdp.tenant.policyservice;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.5.2
 * 2013-10-29T12:20:39.334+01:00
 * Generated source version: 2.5.2
 * 
 */
public final class PolicyEvaluationService_PolicyEvaluationServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://policyservice.pdp.tenant.puma/", "PolicyEvaluationServiceService");

    private PolicyEvaluationService_PolicyEvaluationServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = PolicyEvaluationServiceService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        PolicyEvaluationServiceService ss = new PolicyEvaluationServiceService(wsdlURL, SERVICE_NAME);
        PolicyEvaluationService port = ss.getPolicyEvaluationServicePort();  
        
        {
        System.out.println("Invoking getSupportedPolicyIds...");
        java.util.List<java.lang.String> _getSupportedPolicyIds__return = port.getSupportedPolicyIds();
        System.out.println("getSupportedPolicyIds.result=" + _getSupportedPolicyIds__return);


        }
        {
        System.out.println("Invoking evaluatePolicy...");
        java.lang.String _evaluatePolicy_policyId = "_evaluatePolicy_policyId-24280493";
        java.lang.String _evaluatePolicy_xacmlRequest = "_evaluatePolicy_xacmlRequest-1778374410";
        java.util.List<puma.central.pdp.tenant.policyservice.EncodedCachedAttribute> _evaluatePolicy_encodedCachedAttributes = new java.util.ArrayList<puma.central.pdp.tenant.policyservice.EncodedCachedAttribute>();
        puma.central.pdp.tenant.policyservice.EncodedCachedAttribute _evaluatePolicy_encodedCachedAttributesVal1 = new puma.central.pdp.tenant.policyservice.EncodedCachedAttribute();
        java.util.List<puma.central.pdp.tenant.policyservice.SimpleAttributeValue> _evaluatePolicy_encodedCachedAttributesVal1EncodedBagAttribute = new java.util.ArrayList<puma.central.pdp.tenant.policyservice.SimpleAttributeValue>();
        puma.central.pdp.tenant.policyservice.SimpleAttributeValue _evaluatePolicy_encodedCachedAttributesVal1EncodedBagAttributeVal1 = new puma.central.pdp.tenant.policyservice.SimpleAttributeValue();
        _evaluatePolicy_encodedCachedAttributesVal1EncodedBagAttributeVal1.setType("Type-708963528");
        _evaluatePolicy_encodedCachedAttributesVal1EncodedBagAttributeVal1.setValue("Value-1555426861");
        _evaluatePolicy_encodedCachedAttributesVal1EncodedBagAttribute.add(_evaluatePolicy_encodedCachedAttributesVal1EncodedBagAttributeVal1);
        _evaluatePolicy_encodedCachedAttributesVal1.getEncodedBagAttribute().addAll(_evaluatePolicy_encodedCachedAttributesVal1EncodedBagAttribute);
        _evaluatePolicy_encodedCachedAttributesVal1.setId("Id-167236883");
        _evaluatePolicy_encodedCachedAttributesVal1.setType("Type663715128");
        _evaluatePolicy_encodedCachedAttributes.add(_evaluatePolicy_encodedCachedAttributesVal1);
        try {
            java.lang.String _evaluatePolicy__return = port.evaluatePolicy(_evaluatePolicy_policyId, _evaluatePolicy_xacmlRequest, _evaluatePolicy_encodedCachedAttributes);
            System.out.println("evaluatePolicy.result=" + _evaluatePolicy__return);

        } catch (ErrorWhileProcessingException_Exception e) { 
            System.out.println("Expected exception: ErrorWhileProcessingException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
